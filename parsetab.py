
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BACKSLASH COMMA DIVIDE DOT EQUALS ERROR IGNORE INDEX LBRAC LCHAV LEX LIST LITERALS LRBRAC MINUS NUMBER PELICA PERC PLUS QUOTE RBRAC RCHAV REGEX RETURN RRBRAC SSTR STR TIMES TOKENS YACCPROG : LEXERLEXER : LIT IGN TOK RULESLIT : PERC LITERALS EQUALS SSTRIGN : PERC IGNORE EQUALS SSTRTOK : PERC TOKENS EQUALS LISTRULES : RULE RULESRULES : ERRRULE : REGEX RETURN LBRAC SSTR COMMA ARGS RBRACERR : REGEX ERROR LBRAC INSTS RBRACINSTS : INSTS COMMA ARGINSTS : ARGARGS : ARGS COMMA ARGARGS : ARGARG : STRARG : NUMBERARG : STR LBRAC ARG RBRACARG : STR LRBRAC ARG RRBRACARG : STR DOT ARG ARG : INDEXARG : SSTR'
    
_lr_action_items = {'PERC':([0,3,5,18,23,],[4,6,9,-3,-4,]),'$end':([1,2,12,14,19,35,],[0,-1,-2,-7,-6,-9,]),'LITERALS':([4,],[7,]),'IGNORE':([6,],[10,]),'EQUALS':([7,10,16,],[11,17,22,]),'REGEX':([8,13,26,47,],[15,15,-5,-8,]),'TOKENS':([9,],[16,]),'SSTR':([11,17,24,25,34,36,37,38,39,46,],[18,23,27,33,33,33,33,33,33,33,]),'RETURN':([15,],[20,]),'ERROR':([15,],[21,]),'LBRAC':([20,21,30,],[24,25,37,]),'LIST':([22,],[26,]),'STR':([25,34,36,37,38,39,46,],[30,30,30,30,30,30,30,]),'NUMBER':([25,34,36,37,38,39,46,],[31,31,31,31,31,31,31,]),'INDEX':([25,34,36,37,38,39,46,],[32,32,32,32,32,32,32,]),'COMMA':([27,28,29,30,31,32,33,40,41,42,45,48,49,50,],[34,36,-11,-14,-15,-19,-20,46,-13,-10,-18,-16,-17,-12,]),'RBRAC':([28,29,30,31,32,33,40,41,42,43,45,48,49,50,],[35,-11,-14,-15,-19,-20,47,-13,-10,48,-18,-16,-17,-12,]),'RRBRAC':([30,31,32,33,44,45,48,49,],[-14,-15,-19,-20,49,-18,-16,-17,]),'LRBRAC':([30,],[38,]),'DOT':([30,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROG':([0,],[1,]),'LEXER':([0,],[2,]),'LIT':([0,],[3,]),'IGN':([3,],[5,]),'TOK':([5,],[8,]),'RULES':([8,13,],[12,19,]),'RULE':([8,13,],[13,13,]),'ERR':([8,13,],[14,14,]),'INSTS':([25,],[28,]),'ARG':([25,34,36,37,38,39,46,],[29,41,42,43,44,45,50,]),'ARGS':([34,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROG","S'",1,None,None,None),
  ('PROG -> LEXER','PROG',1,'p_PROG','compilador.py',79),
  ('LEXER -> LIT IGN TOK RULES','LEXER',4,'p_LEXER','compilador.py',86),
  ('LIT -> PERC LITERALS EQUALS SSTR','LIT',4,'p_LIT','compilador.py',94),
  ('IGN -> PERC IGNORE EQUALS SSTR','IGN',4,'p_IGN','compilador.py',95),
  ('TOK -> PERC TOKENS EQUALS LIST','TOK',4,'p_TOK','compilador.py',96),
  ('RULES -> RULE RULES','RULES',2,'p_RULES_1','compilador.py',99),
  ('RULES -> ERR','RULES',1,'p_RULES_2','compilador.py',100),
  ('RULE -> REGEX RETURN LBRAC SSTR COMMA ARGS RBRAC','RULE',7,'p_RULE_1','compilador.py',102),
  ('ERR -> REGEX ERROR LBRAC INSTS RBRAC','ERR',5,'p_ERR_1','compilador.py',111),
  ('INSTS -> INSTS COMMA ARG','INSTS',3,'p_INSTS_1','compilador.py',118),
  ('INSTS -> ARG','INSTS',1,'p_INSTS_2','compilador.py',123),
  ('ARGS -> ARGS COMMA ARG','ARGS',3,'p_ARGS_1','compilador.py',127),
  ('ARGS -> ARG','ARGS',1,'p_ARGS_2','compilador.py',128),
  ('ARG -> STR','ARG',1,'p_ARG_1','compilador.py',131),
  ('ARG -> NUMBER','ARG',1,'p_ARG_2','compilador.py',132),
  ('ARG -> STR LBRAC ARG RBRAC','ARG',4,'p_ARG_3','compilador.py',133),
  ('ARG -> STR LRBRAC ARG RRBRAC','ARG',4,'p_ARG_4','compilador.py',134),
  ('ARG -> STR DOT ARG','ARG',3,'p_ARG_5','compilador.py',135),
  ('ARG -> INDEX','ARG',1,'p_ARG_6','compilador.py',136),
  ('ARG -> SSTR','ARG',1,'p_ARG_7','compilador.py',137),
]
